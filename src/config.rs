use std::borrow::Cow;

macro_rules! define_enum {
    ($ident:ident { $($field:ident => $repr:expr),* $(,)? }) => {
        #[derive(Copy, Clone, Debug, PartialEq, PartialOrd, Eq, Ord, Hash, serde::Deserialize, serde::Serialize)]
        pub enum $ident {
            $( $field ),*
        }

        impl $ident {
            pub const fn as_str(&self) -> &'static str {
                match self {
                    $(Self::$field => $repr),*
                }
            }
        }

        impl std::fmt::Display for $ident {
            fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
                f.write_str(self.as_str())
            }
        }
    };
}

define_enum! {
    Stat {
        Strength     => "STR",
        Condition    => "CON",
        Dexterity    => "DEX",
        Intelligence => "INT",
        Wisdom       => "WIS",
        Charisma     => "CHA",
        HpMax        => "HP Max",
        MpMax        => "MP Max",
    }
}

define_enum! {
    Equipment {
        Weapon     => "Weapon",
        Shield     => "Shield",
        Helm       => "Helm",
        Hauberk    => "Hauberk",
        Brassairts => "Brassairts",
        Vambraces  => "Vambraces",
        Gauntlets  => "Gauntlets",
        Guisses    => "Guisses",
        Greaves    => "Greaves",
        Sollerets  => "Sollerets",
    }
}

pub const PRIME_STATS: [Stat; 6] = [
    Stat::Strength,
    Stat::Condition,
    Stat::Dexterity,
    Stat::Intelligence,
    Stat::Wisdom,
    Stat::Charisma,
];

pub const ALL_STATS: [Stat; 8] = [
    Stat::Strength,
    Stat::Condition,
    Stat::Dexterity,
    Stat::Intelligence,
    Stat::Wisdom,
    Stat::Charisma,
    Stat::HpMax,
    Stat::MpMax,
];

pub const SPELLS: &[&str] = &[
    "Slime Finger",
    "Rabbit Punch",
    "Hastiness",
    "Good Move",
    "Sadness",
    "Seasick",
    "Shoelaces",
    "Inoculate",
    "Cone of Annoyance",
    "Magnetic Orb",
    "Invisible Hands",
    "Revolting Cloud",
    "Aqueous Humor",
    "Spectral Miasma",
    "Clever Fellow",
    "Lockjaw",
    "History Lesson",
    "Hydrophobia",
    "Big Sister",
    "Cone of Paste",
    "Mulligan",
    "Nestor's Bright Idea",
    "Holy Batpole",
    "Tumor (Benign)",
    "Braingate",
    "Summon a Bitch",
    "Nonplus",
    "Animate Nightstand",
    "Eye of the Troglodyte",
    "Curse Name",
    "Dropsy",
    "Vitreous Humor",
    "Roger's Grand Illusion",
    "Covet",
    "Black Idaho",
    "Astral Miasma",
    "Spectral Oyster",
    "Acrid Hands",
    "Angioplasty",
    "Grognor's Big Day Off",
    "Tumor (Malignant)",
    "Animate Tunic",
    "Ursine Armor",
    "Holy Roller",
    "Tonsillectomy",
    "Curse Family",
    "Infinite Confusion",
];

pub struct Modifier {
    pub name: Cow<'static, str>,
    pub quality: i32,
}

impl Modifier {
    pub const fn new(name: &'static str, quality: i32) -> Self {
        Self {
            name: Cow::Borrowed(name),
            quality,
        }
    }
}

// TODO make this configurable instead of arbitrary
pub const OFFENSE_ATTRIBUTE: &[Modifier] = &[
    Modifier::new("Polished", 1),
    Modifier::new("Serrated", 1),
    Modifier::new("Heavy", 1),
    Modifier::new("Pronged", 2),
    Modifier::new("Steely", 2),
    Modifier::new("Vicious", 3),
    Modifier::new("Venomed", 4),
    Modifier::new("Stabbity", 4),
    Modifier::new("Dancing", 5),
    Modifier::new("Invisible", 6),
    Modifier::new("Vorpal", 7),
];

pub const DEFENSE_ATTRIBUTE: &[Modifier] = &[
    Modifier::new("Studded", 1),
    Modifier::new("Banded", 2),
    Modifier::new("Gilded", 2),
    Modifier::new("Festooned", 3),
    Modifier::new("Holy", 4),
    Modifier::new("Cambric", 1),
    Modifier::new("Fine", 4),
    Modifier::new("Impressive", 5),
    Modifier::new("Custom", 3),
];

pub const OFFENSE_QUIRK: &[Modifier] = &[
    Modifier::new("Dull", -2),
    Modifier::new("Tarnised", -1),
    Modifier::new("Rusty", -3),
    Modifier::new("Padding", -5),
    Modifier::new("Bent", -4),
    Modifier::new("Mini", -4),
    Modifier::new("Rubber", -6),
    Modifier::new("Nerf", -7),
    Modifier::new("Unbalanced", -2),
];

pub const DEFENSE_QUIRK: &[Modifier] = &[
    Modifier::new("Holey", -1),
    Modifier::new("Patched", -1),
    Modifier::new("Threadbare", -2),
    Modifier::new("Faded", -1),
    Modifier::new("Rusty", -3),
    Modifier::new("Motheaten", -3),
    Modifier::new("Mildewed", -2),
    Modifier::new("Torn", -3),
    Modifier::new("Dented", -3),
    Modifier::new("Cursed", -5),
    Modifier::new("Plastic", -4),
    Modifier::new("Cracked", -4),
    Modifier::new("Warped", -3),
    Modifier::new("Corroded", -3),
];

#[derive(Debug, Clone)]
pub struct EquipmentPreset {
    pub name: Cow<'static, str>,
    pub quality: i32,
}

impl EquipmentPreset {
    pub const fn new(name: &'static str, quality: i32) -> Self {
        Self {
            name: Cow::Borrowed(name),
            quality,
        }
    }
}

pub const SHIELDS: &[EquipmentPreset] = &[
    EquipmentPreset::new("Parasol", 0),
    EquipmentPreset::new("Pie Plate", 1),
    EquipmentPreset::new("Garbage Can Lid", 2),
    EquipmentPreset::new("Buckler", 3),
    EquipmentPreset::new("Plexiglass ", 4),
    EquipmentPreset::new("Fender", 4),
    EquipmentPreset::new("Round Shield", 5),
    EquipmentPreset::new("Carapace", 5),
    EquipmentPreset::new("Scutum", 6),
    EquipmentPreset::new("Propugner", 6),
    EquipmentPreset::new("Kite Shield", 7),
    EquipmentPreset::new("Pavise", 8),
    EquipmentPreset::new("Tower Shield", 9),
    EquipmentPreset::new("Baroque Shield", 11),
    EquipmentPreset::new("Aegis", 12),
    EquipmentPreset::new("Magnetic Field", 18),
];

pub const ARMORS: &[EquipmentPreset] = &[
    EquipmentPreset::new("Lace", 1),
    EquipmentPreset::new("Macrame", 2),
    EquipmentPreset::new("Burlap", 3),
    EquipmentPreset::new("Canvas", 4),
    EquipmentPreset::new("Flannel", 5),
    EquipmentPreset::new("Chamois", 6),
    EquipmentPreset::new("Pleathers", 7),
    EquipmentPreset::new("Leathers", 8),
    EquipmentPreset::new("Bearskin", 9),
    EquipmentPreset::new("Ringmail", 10),
    EquipmentPreset::new("Scale Mail", 12),
    EquipmentPreset::new("Chain Mail", 14),
    EquipmentPreset::new("Splint Mail", 15),
    EquipmentPreset::new("Platemail", 16),
    EquipmentPreset::new("Abs", 17),
    EquipmentPreset::new("Kevlar", 18),
    EquipmentPreset::new("Titanium", 19),
    EquipmentPreset::new("Mirthil Mail", 20),
    EquipmentPreset::new("Diamond Mail", 25),
    EquipmentPreset::new("Plasma", 30),
];

pub const SPECIALS: &[&str] = &[
    "Diadem",
    "Festoon",
    "Gemstone",
    "Phial",
    "Tiara",
    "Scabbard",
    "Arrow",
    "Lens",
    "Lamp",
    "Hymnal",
    "Fleece",
    "Laurel",
    "Brooch",
    "Gimlet",
    "Cobble",
    "Albatross",
    "Brazier",
    "Bandolier",
    "Tome",
    "Garnet",
    "Amethyst",
    "Candelabra",
    "Corset",
    "Sphere",
    "Sceptre",
    "Ankh",
    "Talisman",
    "Orb",
    "Gammel",
    "Ornament",
    "Brocade",
    "Galoon",
    "Bijou",
    "Spangle",
    "Gimcrack",
    "Hood",
    "Vulpeculum",
];
pub const ITEM_ATTRIBUTES: &[&str] = &[
    "Golden",
    "Gilded",
    "Spectral",
    "Astral",
    "Garlanded",
    "Precious",
    "Crafted",
    "Dual",
    "Filigreed",
    "Cruciate",
    "Arcane",
    "Blessed",
    "Reverential",
    "Lucky",
    "Enchanted",
    "Gleaming",
    "Grandiose",
    "Sacred",
    "Legendary",
    "Mythic",
    "Crystalline",
    "Austere",
    "Ostentatious",
    "One True",
    "Proverbial",
    "Fearsome",
    "Deadly",
    "Benevolent",
    "Unearthly",
    "Magnificent",
    "Iron",
    "Ormolu",
    "Puissant",
];
pub const ITEM_PREPOSITION: &[&str] = &[
    "Foreboding",
    "Foreshadowing",
    "Nervousness",
    "Happiness",
    "Torpor",
    "Danger",
    "Craft",
    "Silence",
    "Invisibility",
    "Rapidity",
    "Pleasure",
    "Practicality",
    "Hurting",
    "Joy",
    "Petulance",
    "Intrusion",
    "Chaos",
    "Suffering",
    "Extroversion",
    "Frenzy",
    "Sisu",
    "Solitude",
    "Punctuality",
    "Efficiency",
    "Comfort",
    "Patience",
    "Internment",
    "Incarceration",
    "Misapprehension",
    "Loyalty",
    "Envy",
    "Acrimony",
    "Worry",
    "Fear",
    "Awe",
    "Guile",
    "Prurience",
    "Fortune",
    "Perspicacity",
    "Domination",
    "Submission",
    "Fealty",
    "Hunger",
    "Despair",
    "Cruelty",
    "Grob",
    "Dignard",
    "Ra",
    "the Bone",
    "Diamonique",
    "Electrum",
    "Hydragyrum",
];
pub const BORING_ITEMS: &[&str] = &[
    "nail",
    "lunchpail",
    "sock",
    "I.O.U.",
    "cookie",
    "pint",
    "toothpick",
    "writ",
    "newspaper",
    "letter",
    "plank",
    "hat",
    "egg",
    "coin",
    "needle",
    "bucket",
    "ladder",
    "chicken",
    "twig",
    "dirtclod",
    "counterpane",
    "vest",
    "teratoma",
    "bunny",
    "rock",
    "pole",
    "carrot",
    "canoe",
    "inkwell",
    "hoe",
    "bandage",
    "trowel",
    "towel",
    "planter box",
    "anvil",
    "axle",
    "tuppence",
    "casket",
    "nosegay",
    "trinket",
    "credenza",
    "writ",
];

pub const WEAPONS: &[EquipmentPreset] = &[
    EquipmentPreset::new("Stick", 0),
    EquipmentPreset::new("Broken Bottle", 1),
    EquipmentPreset::new("Shiv", 1),
    EquipmentPreset::new("Sprig", 1),
    EquipmentPreset::new("Oxgoad", 1),
    EquipmentPreset::new("Eelspear", 2),
    EquipmentPreset::new("Bowie Knife", 2),
    EquipmentPreset::new("Claw Hammer", 2),
    EquipmentPreset::new("Handpeen", 2),
    EquipmentPreset::new("Andiron", 3),
    EquipmentPreset::new("Hatchet", 3),
    EquipmentPreset::new("Tomahawk", 3),
    EquipmentPreset::new("Hackbarm", 3),
    EquipmentPreset::new("Crowbar", 4),
    EquipmentPreset::new("Mace", 4),
    EquipmentPreset::new("Battleadze", 4),
    EquipmentPreset::new("Leafmace", 5),
    EquipmentPreset::new("Shortsword", 5),
    EquipmentPreset::new("Longiron", 5),
    EquipmentPreset::new("Poachard", 5),
    EquipmentPreset::new("Baselard", 5),
    EquipmentPreset::new("Whinyard", 6),
    EquipmentPreset::new("Blunderbuss", 6),
    EquipmentPreset::new("Longsword", 6),
    EquipmentPreset::new("Crankbow", 6),
    EquipmentPreset::new("Blibo", 7),
    EquipmentPreset::new("Broadsword", 7),
    EquipmentPreset::new("Kreen", 7),
    EquipmentPreset::new("Warhammer", 7),
    EquipmentPreset::new("Morning Star", 8),
    EquipmentPreset::new("Pole-adze", 8),
    EquipmentPreset::new("Spontoon", 8),
    EquipmentPreset::new("Bastard Sword", 9),
    EquipmentPreset::new("Peen-arm", 9),
    EquipmentPreset::new("Culverin", 10),
    EquipmentPreset::new("Lance", 10),
    EquipmentPreset::new("Halberd", 11),
    EquipmentPreset::new("Poleax", 12),
    EquipmentPreset::new("Bandyclef", 15),
];

#[derive(Debug, Clone, serde::Deserialize, serde::Serialize)]
pub struct Race {
    pub name: Cow<'static, str>,
    pub attributes: Cow<'static, [Stat]>,
}

impl Race {
    pub const fn new(name: &'static str, attributes: &'static [Stat]) -> Self {
        Self {
            name: Cow::Borrowed(name),
            attributes: Cow::Borrowed(attributes),
        }
    }
}

pub const RACES: &[Race] = &[
    Race::new("Half Orc", &[Stat::HpMax]),
    Race::new("Half Man", &[Stat::Charisma]),
    Race::new("Half Halfling", &[Stat::Dexterity]),
    Race::new("Double Hobbit", &[Stat::Strength]),
    Race::new("Hob-Hobbit", &[Stat::Dexterity, Stat::Condition]),
    Race::new("Low Elf", &[Stat::Condition]),
    Race::new("Dung Elf", &[Stat::Wisdom]),
    Race::new("Talking Pony", &[Stat::MpMax, Stat::Intelligence]),
    Race::new("Gyrognome", &[Stat::Dexterity]),
    Race::new("Lesser Dwarf", &[Stat::Condition]),
    Race::new("Crested Dwarf", &[Stat::Charisma]),
    Race::new("Eel Man", &[Stat::Dexterity]),
    Race::new("Panda Man", &[Stat::Condition, Stat::Strength]),
    Race::new("Trans-Kobold", &[Stat::Wisdom]),
    Race::new("Enchanted Motorcycle", &[Stat::MpMax]),
    Race::new("Will o' the Wisp", &[Stat::Wisdom]),
    Race::new("Battle-Finch", &[Stat::Dexterity, Stat::Intelligence]),
    Race::new("Double Wookiee", &[Stat::Strength]),
    Race::new("Skraeling", &[Stat::Wisdom]),
    Race::new("Demicanadian", &[Stat::Condition]),
    Race::new("Land Squid", &[Stat::Strength, Stat::HpMax]),
];

#[derive(Debug, Clone, serde::Deserialize, serde::Serialize)]
pub struct Class {
    pub name: Cow<'static, str>,
    pub attributes: Cow<'static, [Stat]>,
}

impl Class {
    pub const fn new(name: &'static str, attributes: &'static [Stat]) -> Self {
        Self {
            name: Cow::Borrowed(name),
            attributes: Cow::Borrowed(attributes),
        }
    }
}

pub const CLASSES: &[Class] = &[
    Class::new("Ur-Paladin", &[Stat::Wisdom, Stat::Condition]),
    Class::new("Voodoo Princess", &[Stat::Intelligence, Stat::Charisma]),
    Class::new("Robot Monk", &[Stat::Strength]),
    Class::new("Mu-Fu Monk", &[Stat::Dexterity]),
    Class::new("Mage Illusioner", &[Stat::Intelligence, Stat::MpMax]),
    Class::new("Shiv Knight", &[Stat::Dexterity]),
    Class::new("Inner Mason", &[Stat::Condition]),
    Class::new("Fighter/Organist", &[Stat::Charisma, Stat::Strength]),
    Class::new("Puma Burgular", &[Stat::Dexterity]),
    Class::new("Runeloremaster", &[Stat::Wisdom]),
    Class::new("Hunter Strangler", &[Stat::Dexterity, Stat::Intelligence]),
    Class::new("Battle Felon", &[Stat::Strength]),
    Class::new("Tickle-Mimic", &[Stat::Wisdom, Stat::Intelligence]),
    Class::new("Slow Poisoner", &[Stat::Condition]),
    Class::new("Lowling", &[Stat::Wisdom]),
    Class::new("Birdrider", &[Stat::Wisdom]),
    Class::new("Bastard Lunatic", &[Stat::Condition]),
    Class::new("Vermineer", &[Stat::Intelligence]),
];

pub const MONSTERS: &[Monster] = &[
    Monster::new("Anhkheg", 6, Some("chitin")),
    Monster::new("Ant", 0, Some("antenna")),
    Monster::new("Ape", 4, Some("ass")),
    Monster::new("Baluchitherium", 14, Some("ear")),
    Monster::new("Beholder", 10, Some("eyestalk")),
    Monster::new("Black Pudding", 10, Some("saliva")),
    Monster::new("Blink Dog", 4, Some("eyelid")),
    Monster::new("Cub Scout", 1, Some("neckerchief")),
    Monster::new("Girl Scout", 2, Some("cookie")),
    Monster::new("Boy Scout", 3, Some("merit badge")),
    Monster::new("Eagle Scout", 4, Some("merit badge")),
    Monster::new("Bugbear", 3, Some("skin")),
    Monster::new("Bugboar", 3, Some("tusk")),
    Monster::new("Boogie", 3, Some("slime")),
    Monster::new("Camel", 2, Some("hump")),
    Monster::new("Carrion Crawler", 3, Some("egg")),
    Monster::new("Catoblepas", 6, Some("neck")),
    Monster::new("Centaur", 4, Some("rib")),
    Monster::new("Centipede", 0, Some("leg")),
    Monster::new("Cockatrice", 5, Some("wattle")),
    Monster::new("Couatl", 9, Some("wing")),
    Monster::new("Crayfish", 0, Some("antenna")),
    Monster::new("Demogorgon", 53, Some("tentacle")),
    Monster::new("Jubilex", 17, Some("gel")),
    Monster::new("Manes", 1, Some("tooth")),
    Monster::new("Orcus", 27, Some("wand")),
    Monster::new("Succubus", 6, Some("bra")),
    Monster::new("Vrock", 8, Some("neck")),
    Monster::new("Hezrou", 9, Some("leg")),
    Monster::new("Glabrezu", 10, Some("collar")),
    Monster::new("Nalfeshnee", 11, Some("tusk")),
    Monster::new("Marilith", 7, Some("arm")),
    Monster::new("Balor", 8, Some("whip")),
    Monster::new("Yeenoghu", 25, Some("flail")),
    Monster::new("Asmodeus", 52, Some("leathers")),
    Monster::new("Baalzebul", 43, Some("pants")),
    Monster::new("Barbed Devil", 8, Some("flame")),
    Monster::new("Bone Devil", 9, Some("hook")),
    Monster::new("Dispater", 30, Some("matches")),
    Monster::new("Erinyes", 6, Some("thong")),
    Monster::new("Geryon", 30, Some("cornucopia")),
    Monster::new("Malebranche", 5, Some("fork")),
    Monster::new("Ice Devil", 11, Some("snow")),
    Monster::new("Lemure", 3, Some("blob")),
    Monster::new("Pit Fiend", 13, Some("seed")),
    Monster::new("Ankylosaurus", 9, Some("tail")),
    Monster::new("Brontosaurus", 30, Some("brain")),
    Monster::new("Diplodocus", 24, Some("fin")),
    Monster::new("Elasmosaurus", 15, Some("neck")),
    Monster::new("Gorgosaurus", 13, Some("arm")),
    Monster::new("Iguanadon", 6, Some("thumb")),
    Monster::new("Megalosaurus", 12, Some("jaw")),
    Monster::new("Monoclonius", 8, Some("horn")),
    Monster::new("Pentasaurus", 12, Some("head")),
    Monster::new("Stegosaurus", 18, Some("plate")),
    Monster::new("Triceratops", 16, Some("horn")),
    Monster::new("Tyrannosaurus Rex", 18, Some("forearm")),
    Monster::new("Djinn", 7, Some("lamp")),
    Monster::new("Doppelganger", 4, Some("face")),
    Monster::new("Black Dragon", 7, None),
    Monster::new("Plaid Dragon", 7, Some("sporrin")),
    Monster::new("Blue Dragon", 9, None),
    Monster::new("Beige Dragon", 9, None),
    Monster::new("Brass Dragon", 7, Some("pole")),
    Monster::new("Tin Dragon", 8, None),
    Monster::new("Bronze Dragon", 9, Some("medal")),
    Monster::new("Chromatic Dragon", 16, Some("scale")),
    Monster::new("Copper Dragon", 8, Some("loafer")),
    Monster::new("Gold Dragon", 8, Some("filling")),
    Monster::new("Green Dragon", 8, None),
    Monster::new("Platinum Dragon", 21, None),
    Monster::new("Red Dragon", 10, Some("cocktail")),
    Monster::new("Silver Dragon", 10, None),
    Monster::new("White Dragon", 6, Some("tooth")),
    Monster::new("Dragon Turtle", 13, Some("shell")),
    Monster::new("Dryad", 2, Some("acorn")),
    Monster::new("Dwarf", 1, Some("drawers")),
    Monster::new("Eel", 2, Some("sashimi")),
    Monster::new("Efreet", 10, Some("cinder")),
    Monster::new("Sand Elemental", 8, Some("glass")),
    Monster::new("Bacon Elemental", 10, Some("bit")),
    Monster::new("Porn Elemental", 12, Some("lube")),
    Monster::new("Cheese Elemental", 14, Some("curd")),
    Monster::new("Hair Elemental", 16, Some("follicle")),
    Monster::new("Swamp Elf", 1, Some("lilypad")),
    Monster::new("Brown Elf", 1, Some("tusk")),
    Monster::new("Sea Elf", 1, Some("jerkin")),
    Monster::new("Ettin", 10, Some("fur")),
    Monster::new("Frog", 0, Some("leg")),
    Monster::new("Violet Fungi", 3, Some("spore")),
    Monster::new("Gargoyle", 4, Some("gravel")),
    Monster::new("Gelatinous Cube", 4, Some("jam")),
    Monster::new("Ghast", 4, Some("vomit")),
    Monster::new("Ghost", 10, None),
    Monster::new("Ghoul", 2, Some("muscle")),
    Monster::new("Humidity Giant", 12, Some("drops")),
    Monster::new("Beef Giant", 11, Some("steak")),
    Monster::new("Quartz Giant", 10, Some("crystal")),
    Monster::new("Porcelain Giant", 9, Some("fixture")),
    Monster::new("Rice Giant", 8, Some("grain")),
    Monster::new("Cloud Giant", 12, Some("condensation")),
    Monster::new("Fire Giant", 11, Some("cigarettes")),
    Monster::new("Frost Giant", 10, Some("snowman")),
    Monster::new("Hill Giant", 8, Some("corpse")),
    Monster::new("Stone Giant", 9, Some("hatchling")),
    Monster::new("Storm Giant", 15, Some("barometer")),
    Monster::new("Mini Giant", 4, Some("pompadour")),
    Monster::new("Gnoll", 2, Some("collar")),
    Monster::new("Gnome", 1, Some("hat")),
    Monster::new("Goblin", 1, Some("ear")),
    Monster::new("Grid Bug", 1, Some("carapace")),
    Monster::new("Jellyrock", 9, Some("seedling")),
    Monster::new("Beer Golem", 15, Some("foam")),
    Monster::new("Oxygen Golem", 17, Some("platelet")),
    Monster::new("Cardboard Golem", 14, Some("recycling")),
    Monster::new("Rubber Golem", 16, Some("ball")),
    Monster::new("Leather Golem", 15, Some("fob")),
    Monster::new("Gorgon", 8, Some("testicle")),
    Monster::new("Gray Ooze", 3, Some("gravy")),
    Monster::new("Green Slime", 2, Some("sample")),
    Monster::new("Griffon", 7, Some("nest")),
    Monster::new("Banshee", 7, Some("larynx")),
    Monster::new("Harpy", 3, Some("mascara")),
    Monster::new("Hell Hound", 5, Some("tongue")),
    Monster::new("Hippocampus", 4, Some("mane")),
    Monster::new("Hippogriff", 3, Some("egg")),
    Monster::new("Hobgoblin", 1, Some("patella")),
    Monster::new("Homunculus", 2, Some("fluid")),
    Monster::new("Hydra", 8, Some("gyrum")),
    Monster::new("Imp", 2, Some("tail")),
    Monster::new("Invisible Stalker", 8, None),
    Monster::new("Iron Peasant", 3, Some("chaff")),
    Monster::new("Jumpskin", 3, Some("shin")),
    Monster::new("Kobold", 1, Some("penis")),
    Monster::new("Leprechaun", 1, Some("wallet")),
    Monster::new("Leucrotta", 6, Some("hoof")),
    Monster::new("Lich", 11, Some("crown")),
    Monster::new("Lizard Man", 2, Some("tail")),
    Monster::new("Lurker", 10, Some("sac")),
    Monster::new("Manticore", 6, Some("spike")),
    Monster::new("Mastodon", 12, Some("tusk")),
    Monster::new("Medusa", 6, Some("eye")),
    Monster::new("Multicell", 2, Some("dendrite")),
    Monster::new("Pirate", 1, Some("booty")),
    Monster::new("Berserker", 1, Some("shirt")),
    Monster::new("Caveman", 2, Some("club")),
    Monster::new("Dervish", 1, Some("robe")),
    Monster::new("Merman", 1, Some("trident")),
    Monster::new("Mermaid", 1, Some("gills")),
    Monster::new("Mimic", 9, Some("hinge")),
    Monster::new("Mind Flayer", 8, Some("tentacle")),
    Monster::new("Minotaur", 6, Some("map")),
    Monster::new("Yellow Mold", 1, Some("spore")),
    Monster::new("Morkoth", 7, Some("teeth")),
    Monster::new("Mummy", 6, Some("gauze")),
    Monster::new("Naga", 9, Some("rattle")),
    Monster::new("Nebbish", 1, Some("belly")),
    Monster::new("Neo-Otyugh", 11, Some("organ ")),
    Monster::new("Nixie", 1, Some("webbing")),
    Monster::new("Nymph", 3, Some("hanky")),
    Monster::new("Ochre Jelly", 6, Some("nucleus")),
    Monster::new("Octopus", 2, Some("beak")),
    Monster::new("Ogre", 4, Some("talon")),
    Monster::new("Ogre Mage", 5, Some("apparel")),
    Monster::new("Orc", 1, Some("snout")),
    Monster::new("Otyugh", 7, Some("organ")),
    Monster::new("Owlbear", 5, Some("feather")),
    Monster::new("Pegasus", 4, Some("aileron")),
    Monster::new("Peryton", 4, Some("antler")),
    Monster::new("Piercer", 3, Some("tip")),
    Monster::new("Pixie", 1, Some("dust")),
    Monster::new("Man-o-war", 3, Some("tentacle")),
    Monster::new("Purple Worm", 15, Some("dung")),
    Monster::new("Quasit", 3, Some("tail")),
    Monster::new("Rakshasa", 7, Some("pajamas")),
    Monster::new("Rat", 0, Some("tail")),
    Monster::new("Remorhaz", 11, Some("protrusion")),
    Monster::new("Roc", 18, Some("wing")),
    Monster::new("Roper", 11, Some("twine")),
    Monster::new("Rot Grub", 1, Some("eggsac")),
    Monster::new("Rust Monster", 5, Some("shavings")),
    Monster::new("Satyr", 5, Some("hoof")),
    Monster::new("Sea Hag", 3, Some("wart")),
    Monster::new("Silkie", 3, Some("fur")),
    Monster::new("Shadow", 3, Some("silhouette")),
    Monster::new("Shambling Mound", 10, Some("mulch")),
    Monster::new("Shedu", 9, Some("hoof")),
    Monster::new("Shrieker", 3, Some("stalk")),
    Monster::new("Skeleton", 1, Some("clavicle")),
    Monster::new("Spectre", 7, Some("vestige")),
    Monster::new("Sphinx", 10, Some("paw")),
    Monster::new("Spider", 0, Some("web")),
    Monster::new("Sprite", 1, Some("can")),
    Monster::new("Stirge", 1, Some("proboscis")),
    Monster::new("Stun Bear", 5, Some("tooth")),
    Monster::new("Stun Worm", 2, Some("trode")),
    Monster::new("Su-monster", 5, Some("tail")),
    Monster::new("Sylph", 3, Some("thigh")),
    Monster::new("Titan", 20, Some("sandal")),
    Monster::new("Trapper", 12, Some("shag")),
    Monster::new("Treant", 10, Some("acorn")),
    Monster::new("Triton", 3, Some("scale")),
    Monster::new("Troglodyte", 2, Some("tail")),
    Monster::new("Troll", 6, Some("hide")),
    Monster::new("Umber Hulk", 8, Some("claw")),
    Monster::new("Unicorn", 4, Some("blood")),
    Monster::new("Vampire", 8, Some("pancreas")),
    Monster::new("Wight", 4, Some("lung")),
    Monster::new("Will-o'-the-Wisp", 9, Some("wisp")),
    Monster::new("Wraith", 5, Some("finger")),
    Monster::new("Wyvern", 7, Some("wing")),
    Monster::new("Xorn", 7, Some("jaw")),
    Monster::new("Yeti", 4, Some("fur")),
    Monster::new("Zombie", 2, Some("forehead")),
    Monster::new("Wasp", 0, Some("stinger")),
    Monster::new("Rat", 1, Some("tail")),
    Monster::new("Bunny", 0, Some("ear")),
    Monster::new("Moth", 0, Some("dust")),
    Monster::new("Beagle", 0, Some("collar")),
    Monster::new("Midge", 0, Some("corpse")),
    Monster::new("Ostrich", 1, Some("beak")),
    Monster::new("Billy Goat", 1, Some("beard")),
    Monster::new("Bat", 1, Some("wing")),
    Monster::new("Koala", 2, Some("heart")),
    Monster::new("Wolf", 2, Some("paw")),
    Monster::new("Whippet", 2, Some("collar")),
    Monster::new("Uruk", 2, Some("boot")),
    Monster::new("Poroid", 4, Some("node")),
    Monster::new("Moakum", 8, Some("frenum")),
    Monster::new("Fly", 0, None),
    Monster::new("Hogbird", 3, Some("curl")),
    Monster::new("Wolog", 4, Some("lemma")),
];

#[derive(Debug, Clone, serde::Deserialize, serde::Serialize)]
pub struct Monster {
    pub name: Cow<'static, str>,
    pub level: usize,
    pub item: Option<Cow<'static, str>>,
}

impl Monster {
    pub const fn new(name: &'static str, level: usize, item: Option<&'static str>) -> Self {
        Self {
            name: Cow::Borrowed(name),
            level,
            item: match item {
                Some(item) => Some(Cow::Borrowed(item)),
                None => None,
            },
        }
    }
}

pub const TITLES: &[&str] = &[
    "Mr.", "Mrs.", "Sir", "Sgt.", "Ms.", "Captain", "Chief", "Admiral", "Saint",
];

pub const IMPRESSIVE_TITLES: &[&str] = &[
    "King",
    "Queen",
    "Lord",
    "Lady",
    "Viceroy",
    "Mayor",
    "Prince",
    "Princess",
    "Chief",
    "Boss",
    "Archbishop",
];
